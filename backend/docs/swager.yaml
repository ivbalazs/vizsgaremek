openapi: 3.0.0
info:
  version: 1.0.0
  title: FullStack Developers Exam API
  description: An API for the FullStack Developers Exam 
servers:
  - url: http://localhost:3000
paths:
  /costs:
    get:
      description: Returns a list of costs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of costs returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cost'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new cost
      security:
        - bearerAuth: []      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cost'
      responses:
        '201':
          description: Cost has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cost'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /costs/{_id}:
    get:
      description: Get a cost
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a Cost
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Cost'
        '404':
          description: Cost based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a cost
      security:
        - bearerAuth: []      
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cost'
      responses:
        '200':
          description: Cost has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cost'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a cost
      security:
        - bearerAuth: []      
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Cost has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Cost based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /income:
    get:
      description: Returns a list of incomes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of incomes returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Income'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new income
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
      responses:
        '201':
          description: Income has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /income/{_id}:
    get:
      description: Get a income
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a Income
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Income'
        '404':
          description: Income based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a income
      security:
        - bearerAuth: []      
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
      responses:
        '200':
          description: Income has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a income
      security:
        - bearerAuth: []      
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Income has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Income based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /costcategories:
    get:
      description: Returns a list of cost categories
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of cost categories returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CostCategory'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new cost category
      security:
        - bearerAuth: []      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostCategory'
      responses:
        '201':
          description: Cost category has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCategory'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /costcategories/{_id}:
    get:
      description: Get a cost category
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a Cost Category
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/CostCategory'
        '404':
          description: Cost category based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a cost category
      security:
        - bearerAuth: []      
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostCategory'
      responses:
        '200':
          description: Cost category has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCategory'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a cost category
      security:
        - bearerAuth: []      
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Cost category has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Cost category based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /costservice:
    get:
      description: Returns a list of cost services
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of cost services returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CostService'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new cost service
      security:
        - bearerAuth: []      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostService'
      responses:
        '201':
          description: Cost service has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostService'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /costservice/{_id}:
    get:
      description: Get a cost service
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a Cost Service
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/CostService'
        '404':
          description: Cost service based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a cost service
      security:
        - bearerAuth: []      
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostService'
      responses:
        '200':
          description: Cost service has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostService'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a cost service
      security:
        - bearerAuth: []      
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Cost service has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Cost service based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /users:
    get:
      description: Returns a list of users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{_id}:
    get:
      description: Get an user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns user
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/User'
        '404':
          description: User based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates an user
      security:
        - bearerAuth: []      
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Cost:
      type: object
      required:
        - name
        - date
        - sum
        - description
        - costCategoryName
        - costServiceName
      properties:
        name:
          type: string
        date:
          type: string
        sum:
          type: number
        description:
          type: string
        costCategoryName:
          type: string
        costServiceName:
          type: string
    Income:
      type: object
      required:
        - date
        - incomeName
        - sum
        - description
      properties:
        date:
          type: string
        incomeName:
          type: string
        sum:
          type: number
        description:
          type: string
    CostCategory:
      type: object
      required:
        - costCategoryName
        - description
      properties:
        costCategoryName:
          type: string
        description:
          type: string
    CostService:
      type: object
      required:
        - costServiceName
        - address
        - description
      properties:
        costCategoryName:
          type: string
        address:
          type: string
        description:
          type: string
    User:
      type: object
      required:
        - name
        - email
        - password
        - role
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: number
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean